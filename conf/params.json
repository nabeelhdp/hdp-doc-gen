{
  "HDFS": {
    "core-site": {
      "fs.defaultFS": "Namenode URL"
    },
    "hadoop-env": {
      "namenode_heapsize": "Namenode Heapsize"
    },
    "hdfs-site": {
      "dfs.blocksize": "HDFS Blocksize",
      "dfs.datanode.data.dir": "Datanode HDFS Data Dir",
      "dfs.journalnode.edits.dir": "JournalNode Edits Dir",
      "dfs.namenode.name.dir": "Namenode HDFS Data Dir",
      "dfs.replication": "HDFS Replication factor",
      "dfs.namenode.handler.count": "Namenode Handler count",
      "dfs.datanode.failed.volumes.tolerated": "DataNode failed disk tolerance"
    }
  },
  "HIVE": {
    "hive-interactive-site": {
      "hive.execution.mode": "Hive Execution mode",
      "hive.llap.daemon.num.executors": "Hive LLAP Executor count",
      "hive.llap.daemon.queue.name": "Hive LLAP Daemon Queue",
      "hive.llap.execution.mode": "Hive LLAP Execution mode",
      "hive.server2.enable.doAs": "Hive Impersonation Enabled",
      "hive.server2.tez.initialize.default.sessions": "Tez pre-create sessions"
    },
    "hive-site": {
      "hive.heapsize": "Hive Heapsize",
      "hive.server2.zookeeper.namespace": "Hive ZK namespace",
      "hive.zookeeper.quorum": "Hive ZK quorum"
    },
    "hive-env": {
      "hive.metastore.heapsize": "Hive metastore heapsize",
      "hive_database_name": "Hive DB name",
      "hive_database_type": "Hive DB type",
      "hive_security_authorization": "Hive Security Authorization"
    }
  },
  "KAFKA": {
    "kafka-broker": {
      "auto.create.topics.enable": "Auto-create topics enabled",
      "auto.leader.rebalance.enable": "Auto leader rebalance enabled",
      "compression.type": "Compression type",
      "default.replication.factor": "Default replication factor",
      "delete.topic.enable": "Delete topic enabled",
      "log.dirs": "Kafka Log(data) directories",
      "message.max.bytes": "Max message size",
      "min.insync.replicas": "Min insync replicas",
      "num.io.threads": "I/O thread count",
      "num.network.threads": "Network thread count",
      "num.partitions": "Default number of partitions",
      "port": "Broker listening port",
      "queued.max.requests": "Max queued request count",
      "sasl.enabled.mechanisms": "SASL Mechanism enabled",
      "ssl.client.auth": "SSL Client authentication method",
      "zookeeper.connect": "ZK connect URL",
      "zookeeper.connection.timeout.ms": "ZK connection timeout(ms)",
      "zookeeper.session.timeout.ms": "ZK session timeout(ms) "
    },
    "kafka-env": {
      "is_supported_kafka_ranger": "Ranger-Kafka support",
      "kafka_log_dir": "Kafka daemon log directory"
    }
  },
  "MAPREDUCE2": {
    "mapred-site": {
      "mapred.local.dir": "MapReduce local directory",
      "mapreduce.jobhistory.address": "MapReduce jobhistory server",
      "mapreduce.map.memory.mb": "MapReduce Map memory",
      "mapreduce.reduce.memory.mb": "MapReduce Reduce memory",
      "yarn.app.mapreduce.am.resource.mb": "MapReduce AM memory",
      "mapreduce.task.io.sort.mb": "MapReduce io.sort.mb"
    }
  },
  "YARN": {
    "yarn-env": {
      "nodemanager_heapsize": "YARN NodeManager Heap",
      "resourcemanager_heapsize": "YARN ResourceManager Heap",
      "yarn_cgroups_enabled": "YARN CGroups enabled",
      "apptimelineserver_heapsize": "YARN ATS Heap size"
    },
    "yarn-site": {
      "yarn.log-aggregation-enable": "YARN Log Aggregation enabled",
      "yarn.log.server.url": "YARN Log Server URL",
      "yarn.log.server.web-service.url": "YARN Log Server Web Service URL",
      "yarn.nodemanager.local-dirs": "YARN Nodemanager Local Dir",
      "yarn.nodemanager.log-dirs": "YARN Nodemanager Log Dir",
      "yarn.nodemanager.log.retain-seconds": "YARN Nodemanager log retention seconds",
      "yarn.nodemanager.resource.memory-mb": "YARN NM allocated memory",
      "yarn.nodemanager.resource.cpu-vcores": "YARN NM allocated vcpu",
      "yarn.resourcemanager.address": "YARN RM address",
      "yarn.resourcemanager.ha.enabled": "YARN RM HA enabled",
      "yarn.resourcemanager.zk-address": "YARN RM ZK address",
      "yarn.resourcemanager.zk-state-store.parent-path": "YARN RM state-store ZK path"
    }
  },
  "ZOOKEEPER": {
    "zoo.cfg": {
      "autopurge.purgeInterval": "Snapshot purge interval",
      "autopurge.snapRetainCount": "Snapshot retain count",
      "dataDir": "Data directory"
    },
    "zookeeper-env": {
      "zk_log_dir": "Log directory",
      "zk_server_heapsize": "Zookeeper Heap size"
    }
  }
}
